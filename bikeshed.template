heat_template_version: 2013-05-23

description: |
  Heat Orchestration Template that spins up a
  resource group with 2 Rackspace Cloud Servers
  and a Cloud Load Balancer.

resources:
  web_nodes:
    type: OS::Heat::ResourceGroup
    properties:
      count: 2
      resource_def:
        type: OS::Nova::Server
        properties:
          flavor: 1 GB Performance
          image: CentOS 6.5
          name: BikeShed-Compute Web Nodes
          user_data: |
            #!/usr/bin/env bash
            sudo apt-get update
            sudo apt-get upgrade -y
            sudo apt-get install -y apache2 libapache2-mod-wsgi git python-virtualenv
            # Clone the bikeshed repo. We install it later, but need apache configs first.
            git clone https://github.com/briancurtin/bikeshed bikeshed-src
            sudo cp bikeshed-src/deployment/config/httpd.conf /etc/apache2/
            # Put the WSGI and HTML files where the config expects them.
            # Adjust the wsgi script so it's readable by Apache.
            sudo mkdir -p /var/www/bikeshed && sudo cp -R bikeshed-src/deployment/code/* $_ && sudo chmod o+r $_/bikeshed.wsgi
            # Create our environment and install bikeshed into it.
            virtualenv --setuptools bikeshed-env
            source bikeshed-env/bin/activate
            pip install -r bikeshed-src/requirements.txt
            pip install -e bikeshed-src/
            # Make the home dir accessible by Apache.
            # Ideally this would be installed as a different user...
            sudo chmod o+rx /root
            # Restart apache2
            sudo service apache2 restart

  lb:
    type: Rackspace::Cloud::LoadBalancer
    properties:
      name: BikeShed-Compute Load Balancer
      nodes:
      - addresses: { get_attr: [web_nodes, accessIPv4]} # This is where the
                                                       # wiring magic happens
        port: 80
        condition: ENABLED
      healthMonitor:
        attemptsBeforeDeactivation: 3
        delay: 10
        timeout: 120
        type: HTTP
        path: "/"
        statusRegex: "."
        bodyRegex: "."
      protocol: HTTP
      algorithm: ROUND_ROBIN
      port: 80
      virtualIps:
      - type: PUBLIC
        ipVersion: IPV4

outputs:
  lb_public_ip:
    description: The public IP address of the load balancer
    value: { get_attr: [lb, PublicIp]}